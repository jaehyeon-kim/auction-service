service: auth-service

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.7
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2

package:
  exclude:
    - 'package.json'
    - 'package-lock.json'
    - 'requirements.txt'

functions:
  auth:
    handler: handler_authorize.lambda_function
  public:
    handler: handler_public.lambda_function
    events:
      - http:
          path: public
          method: POST
          cors: true
  private:
    handler: handler_private.lambda_function
    package:
      include:
        - api/private.py
    events:
      - http:
          path: private
          method: POST
          authorizer: auth
          cors: true

resources:
  Resources:
    # This response is needed for custom authorizer failures cors support ¯\_(ツ)_/¯
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
